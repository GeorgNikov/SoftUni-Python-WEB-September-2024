from django.shortcuts import render, redirect, get_object_or_404

from forumApp.posts.forms import PostBaseForm, PostDeleteForm, PostCreateForm, SearchForm, PostEditForm
from forumApp.posts.models import Post
from django.forms import modelform_factory


# Create your views here.
def index(request):
    post_form = modelform_factory(
        Post,
        fields=('title', 'content', 'author', 'languages' ),
    )

    context = {
        "my_form": post_form,
    }

    return render(request, 'common/index.html', context)


def dashboard(request):
    form = SearchForm(request.GET)
    posts = Post.objects.all().order_by('-id')

    if request.method == 'GET':
        if form.is_valid():
            query = form.cleaned_data['query']
            posts = posts.filter(title__icontains=query)

    context = {
        "posts": posts,
        "form": form,
    }

    return render(request, 'posts/dashboard.html', context)

def add_post(request):
    form = PostCreateForm(request.POST or None, request.FILES or None)

    if request.method == "POST":
        if form.is_valid():
            form.save()
            return redirect('dashboard')

    context = {
        "form": form,
    }

    return render(request, 'posts/add-post.html', context)


def delete_post(request, pk: int):
    post = Post.objects.get(pk=pk)
    form = PostDeleteForm(instance=post)

    if request.method == "POST":
        post.delete()
        return redirect('dashboard')

    context = {
        "form": form,
        "post": post,
    }

    return render(request, 'posts/delete-post.html', context)

def edit_post(request, pk: int):
    post = get_object_or_404(Post, pk=pk)

    if request.method == "POST":
        form = PostEditForm(request.POST, instance=post)

        if form.is_valid():
            form.save()
            return redirect('dashboard')
    else:
        form = PostEditForm(instance=post)

    context = {
        "form": form,
        "post": post,
    }

    return render(request, 'posts/edit-post.html', context)

def details_post(request, pk: int):
    post = Post.objects.get(pk=pk)

    context = {
        'post': post
    }

    return render(request, 'posts/details-post.html', context)


